                             //ONE
                        function solve(input: string) -> string {
    let lines = input.split("\n");
    let testcase = int(lines[0]);
    let j = 1;
    let result = "";
    for(let tc = 1;tc<=testcase;tc+=1){
        let n = int(lines[j]);
        let a = [from x in lines[j+1].split(" ")select int(x)];
        j+=2;
        
        let cnt=-1;
        for(let i=n-1;i>0;i-=1)
        {
              if(a[i]>a[i-1])
              {
                     cnt=i-1;
                     break;
              }
        }
        if(cnt==-1||n==1){
            result+=string(-1)+"\n";
        }
        else
        {
            let b:int[]=[];  
            for(let i=cnt+1;i<n;i+=1)
            {
               b.push(a[i]);
            }
            b.sort();
            let s=b.length();
            let tmp =0;
            for(let i=0;i<b.length();i+=1)
            {
                if(b[i]>a[cnt])
                {
                    tmp=b[i];
                    b[i]=a[cnt];
                    a[cnt]=tmp;
                    break;
                }
            }
            for(let i=0;i<=cnt;i+=1)
               {
                  result+=string(a[i]);
               }      
             for(let i=0;i<b.length();i+=1)
               {
                   result+=string(b[i]);
               }
                   result+="\n";
        }          
    }                       
    return result;
}
                                               // TWO_EDITION
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
function solve(input: string) -> string {
    let lines = input.split("\n");
    let N = int(lines[0]);
    let re = [from x in lines[1].split(" ")select int(x)];
    
    let val = 0;
    for(let i = 0;i<N;i+=1){
        val+=re[i];
    }
    for(let i=0;i<N;i+=1){
        re.push(re[i]);
    }
    let pre:int[] = [];
    pre.push(0);
    for(let i=0;i<2*N;i+=1){
        pre.push(pre[i]+re[i]);
    }
    let result = "";
    for(let i=0;i<N;i+=1){
        let x = val/2;
        let low = i+1;
        let high = low-1+N;
        let ans = 10000000000000000;
        while (low<=high)
        {
            let mid = (low+high) / 2;
            if (pre[mid] - pre[i] > x)
            {
                high = mid - 1;
                let bal1 = pre[mid] - pre[i];
                let bal2= val - pre[mid]+pre[i];
                let dis = bal1- bal2;
                if (dis < 0)
                {
                    dis = -dis;
                }
                if(dis<ans){
                    ans = dis;
                }
            }
            else
            {
                low = mid + 1;
                let bal1 = pre[mid] - pre[i];
                let bal2= val - pre[mid] + pre[i];
                let dis = bal1 - bal2;
                if (dis < 0){
                    dis = -dis;
                }
             	if(dis<ans){
                    ans = dis;
                }
            }
        }
        if(i==N-1){
            result += string(ans)+"\n";
        }
        else {
        	result += string(ans)+" ";
        }
    }
    return result;
}
                                                    
                                                    THREE



                               function solve(input: string) -> string {
      let lines = input.split("\n");
      let result = "";
      let k=0;
    for(let i=1;i<=lines.length();i+=1)
    {
        let a = lines[k].split("");
        if(a.length()==0){
            break;
        }
        k+=1;
        let b:int[]=[];
        let c:int[]=[];
        let d:int[]=[];
        for(let j=0;j<a.length();j+=1)
        {
            b.push(int(a[j]));
        }
         b.sort();
        for(let j=b.length()-1;j>=0;j-=1)
         {
           c.push(b[j]);             
         }
         let cnt=0;
         for(let j=0;j<b.length();j+=1)
            {
                  if(b[j]!=0)
                  {
                      d.push(b[j]);
                      cnt=j;
                      break;
                  }
            }
         for(let j=0;j<b.length();j+=1)
            {
                  if(j!=cnt)
                  {
                      d.push(b[j]);
                  }
            }
          let r1=0;
          let r2=0;
          let cn=1;
          for(let j=c.length()-1;j>=0;j-=1)
             {
                       r1+=(cn*c[j]);
                       cn*=10;
             }
          cn=1;
          for(let j=d.length()-1;j>=0;j-=1)
             {
                       r2+=(cn*d[j]);
                       cn*=10;
             }
           let ans=r1-r2;
           let ans2=ans/9;
      result+=string(r1)+" - "+string(r2)+" = "+string(ans)+" = "+"9"+" * "+string(ans2)+"\n";
                
    }
    return result;
}
                                                          // Four
                                                          
                                                          function round(p: float, after_dot: int) -> string {   
    let sign = ""; 
    if (p < 0.0) { 
        sign = "-"; 
        p = -p; 
    } 
 
    let coeff = 1; 
    for (let i = 0; i < after_dot; i += 1) { 
        coeff *= 10; 
    } 
     
    p *= float(coeff); 
    let int_p = int(p + 0.0); 
   
  let after_string = string(int_p % coeff); 
    for (let i = 0; after_string.length() < after_dot; i += 1) { 
        after_string = "0" + after_string; 
    } 
     
    return sign + string(int_p / coeff) + "." + after_string; 
}


function solve(input: string) -> string {
    let ans = "";
    let lines = input.split("\n");
    let te = int(lines[0]);
    for (let i = 0;i < te;i+=1) {
        let n = int(lines[i+1]);
        let left = 0.0000;
        let right = 1000.0000;
        while (right - left > 0.0000001) { 
            let m = (right + left)/2.0;
            if (m*m*m >= float(n)) {
                right = m;
            }
            else {
                left = m;
            }
        }
        ans += round(right,4) + "\n";
    }
 
}
                //Important.
                let mp = {0:0};
